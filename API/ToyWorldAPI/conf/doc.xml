<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GoodAI.ToyWorldAPI</name>
    </assembly>
    <members>
        <member name="T:GoodAI.ToyWorld.Control.AvatarAction`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.AvatarAction`1.Value">
            <summary>
            Value of action.
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.AvatarAction`1.Priority">
            <summary>
            If two or more controllers are connected to one agent, action with highest priority will be performed.
            </summary>
        </member>
        <member name="M:GoodAI.ToyWorld.Control.AvatarAction`1.#ctor(`0,System.Int32)">
            <summary></summary>
            <param name="value">Value of action.</param>
            <param name="priority">If two or more controllers are connected to one agent, action with highest priority will be performed.</param>
        </member>
        <member name="M:GoodAI.ToyWorld.Control.AvatarAction`1.op_Implicit(`0)~GoodAI.ToyWorld.Control.AvatarAction{`0}">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GoodAI.ToyWorld.Control.AvatarAction`1.op_Implicit(GoodAI.ToyWorld.Control.AvatarAction{`0})~`0">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GoodAI.ToyWorld.Control.AvatarAction`1.op_Addition(GoodAI.ToyWorld.Control.AvatarAction{`0},GoodAI.ToyWorld.Control.AvatarAction{`0})">
            <summary>
            
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <returns></returns>
        </member>
        <member name="T:GoodAI.ToyWorld.Control.IAvatarControls">
             <summary>
            
             </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.IAvatarControls.DesiredForwardSpeed">
            <summary>
            Value is clamped to (-1,1). Negative values mean move backwards, positive are for forward movement.
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.IAvatarControls.DesiredRightSpeed">
            <summary>
            Value is clamped to (-1,1). Negative values mean move left, positive are for right movement.
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.IAvatarControls.DesiredLeftRotation">
            <summary>
            Value is clamped to (-1,1). Negative values mean rotate left, positive are for rotation to the right.
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.IAvatarControls.Interact">
            <summary>
            To interact with object in front.
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.IAvatarControls.Use">
            <summary>
            To use tool in hand / punch.
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.IAvatarControls.PickUp">
            <summary>
            Pick up or put down tool in hand.
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.IAvatarControls.Fof">
            <summary>
            Set Fof position
            </summary>
        </member>
        <member name="M:GoodAI.ToyWorld.Control.IAvatarControls.Update(GoodAI.ToyWorld.Control.IAvatarControls)">
            <summary>
            Rewrites actions from this list with actions from parameter with lower priority value.
            </summary>
            <param name="actions"></param>
        </member>
        <member name="M:GoodAI.ToyWorld.Control.IAvatarControls.ToDictionary">
            <summary>
            Returns actions as a float array
            </summary>
            <returns></returns>
        </member>
        <member name="T:GoodAI.ToyWorld.Control.AvatarControls">
             <summary>
            
             </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.AvatarControls.DesiredForwardSpeed">
            <summary>
            Value is clamped to (-1,1). Negative values mean move backwards, positive are for forward movement.
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.AvatarControls.DesiredLeftRotation">
            <summary>
            Value is clamped to (-1,1). Negative values mean rotate right, positive are for rotation to the left.
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.AvatarControls.Interact">
            <summary>
            To interact with object in front.
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.AvatarControls.Use">
            <summary>
            To use tool in hand / punch.
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.AvatarControls.PickUp">
            <summary>
            Pick up or put down tool in hand.
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.AvatarControls.Fof">
            <summary>
            Set Fof position
            </summary>
        </member>
        <member name="M:GoodAI.ToyWorld.Control.AvatarControls.#ctor(System.Int32,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Drawing.PointF)">
              <summary>
            
              </summary>
              <param name="priority"></param>
             <param name="desiredForwardSpeed"></param>
             <param name="desiredRightSpeed"></param>
             <param name="desiredRotation"></param>
              <param name="interact"></param>
              <param name="use"></param>
              <param name="pickUp"></param>
              <param name="fof"></param>
        </member>
        <member name="M:GoodAI.ToyWorld.Control.AvatarControls.#ctor(GoodAI.ToyWorld.Control.IAvatarControls)">
             <summary>
            
             </summary>
             <param name="other"></param>
        </member>
        <member name="M:GoodAI.ToyWorld.Control.AvatarControls.Update(GoodAI.ToyWorld.Control.IAvatarControls)">
            <summary>
            Rewrites actions from this AvatarControls with actions from given AvatarControls with lower priority value.
            </summary>
            <param name="actions"></param>
        </member>
        <member name="F:GoodAI.ToyWorld.Control.RenderRequestGameObject.TileLayers">
            <summary>
            Specifies, if visible tile layers should be drawn.
            </summary>
        </member>
        <member name="F:GoodAI.ToyWorld.Control.RenderRequestGameObject.ObjectLayers">
            <summary>
            Specifies whether visible object layers should be drawn.
            </summary>
        </member>
        <member name="T:GoodAI.ToyWorld.Control.GameObjectSettings">
            <summary>
            
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.GameObjectSettings.EnabledGameObjects">
            <summary>
            Specifies which effects should be used.
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.GameObjectSettings.Use3D">
            <summary>
            If set, the world will use perspective instead of orthogonal projection (the world will appear three-dimensional).
            </summary>
        </member>
        <member name="F:GoodAI.ToyWorld.Control.RenderRequestOverlay.InventoryTool">
            <summary>
            Draws the inventory tool to a corner of the screen. Has no effect for non-AvatarRRs.
            </summary>
        </member>
        <member name="T:GoodAI.ToyWorld.Control.OverlaySettings">
            <summary>
            
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.OverlaySettings.EnabledOverlays">
            <summary>
            Specifies which overlays should be used.
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.OverlaySettings.ToolSize">
            <summary>
            The size of the inventory. Ranges from 0 to 2 (2 covers the whole screen).
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.OverlaySettings.ToolPosition">
            <summary>
            The screen position of the tool overlay. Values are clamped to (-1,1).
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.OverlaySettings.ToolBackground">
            <summary>
            
            </summary>
        </member>
        <member name="F:GoodAI.ToyWorld.Control.RenderRequestPostprocessing.Noise">
            <summary>
            Adds random gaussian noise to every color component of the resulting scene.
            </summary>
        </member>
        <member name="T:GoodAI.ToyWorld.Control.PostprocessingSettings">
            <summary>
            
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.PostprocessingSettings.EnabledPostprocessing">
            <summary>
            Specifies which postprocessing effects should be used.
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.PostprocessingSettings.NoiseIntensityCoefficient">
            <summary>
            
            </summary>
        </member>
        <member name="F:GoodAI.ToyWorld.Control.RenderRequestEffect.DayNight">
            <summary>
            Specifies, if the day progression should dim the scene.
            </summary>
        </member>
        <member name="F:GoodAI.ToyWorld.Control.RenderRequestEffect.Lights">
            <summary>
            Specifies whether light sources should emanate light
            </summary>
        </member>
        <member name="F:GoodAI.ToyWorld.Control.RenderRequestEffect.Smoke">
            <summary>
            Draws cloud-like smoke above the world.
            </summary>
        </member>
        <member name="T:GoodAI.ToyWorld.Control.EffectSettings">
            <summary>
            
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.EffectSettings.EnabledEffects">
            <summary>
            Specifies which effects should be used.
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.EffectSettings.SmokeColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.EffectSettings.SmokeTransformationSpeedCoefficient">
            <summary>
            
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.EffectSettings.SmokeIntensityCoefficient">
            <summary>
            
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.EffectSettings.SmokeScaleCoefficient">
            <summary>
            
            </summary>
        </member>
        <member name="F:GoodAI.ToyWorld.Control.RenderRequestImageCopyingMode.None">
            <summary>
            No copying anywhere (scene is stored in internal framebuffer).
            </summary>
        </member>
        <member name="F:GoodAI.ToyWorld.Control.RenderRequestImageCopyingMode.DefaultFbo">
            <summary>
            Data will be copied to default window's framebuffer (accessible through the world's renderer object).
            </summary>
        </member>
        <member name="F:GoodAI.ToyWorld.Control.RenderRequestImageCopyingMode.Cpu">
            <summary>
            Copies data to an array and calls the supplied event. Set to true if the cuda/opengl interop is failing.
            </summary>
        </member>
        <member name="F:GoodAI.ToyWorld.Control.RenderRequestImageCopyingMode.OpenglPbo">
            <summary>
            Copies data to an OpenGL pixel buffer object and calls the supplied events with the buffer's handle.
            </summary>
        </member>
        <member name="T:GoodAI.ToyWorld.Control.ImageSettings">
            <summary>
            
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.ImageSettings.CopyMode">
            <summary>
            Specifies what means should be used to gather the rendered scene.
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.ImageSettings.CopyDepth">
            <summary>
            If true, callbacks will include valid depth data.
            </summary>
        </member>
        <member name="E:GoodAI.ToyWorld.Control.ImageSettings.OnSceneBufferPrepared">
            <summary>
            Called after a scene image was copied to the buffer. Depth information is only valid if <see cref="P:GoodAI.ToyWorld.Control.ImageSettings.CopyDepth"/> is set to true.
            </summary>
        </member>
        <member name="M:GoodAI.ToyWorld.Control.ImageSettings.InvokePostBufferPrepared(GoodAI.ToyWorld.Control.IRenderRequestBase,System.UInt32[],System.Single[])">
            <summary>
            You should not use this method. Stay away!
            </summary>
        </member>
        <member name="E:GoodAI.ToyWorld.Control.ImageSettings.OnPreRenderingEvent">
            <summary>
            Called before the timeframe in which the buffer object (VBO) will be used as a target to copy rendered results to.
            The argument is an OpenGL handle to the underlying buffer object.
            Use this callback to release any mapping related to the buffer object.
            This callback can be invoked from a different thread than the one calling MakeStep on GameController.
            Depth information is only valid if <see cref="P:GoodAI.ToyWorld.Control.ImageSettings.CopyDepth"/> is set to true.
            </summary>
        </member>
        <member name="M:GoodAI.ToyWorld.Control.ImageSettings.InvokePreRenderingEvent(GoodAI.ToyWorld.Control.IRenderRequestBase,System.UInt32,System.UInt32)">
            <summary>
            You should not use this method. Stay away!
            </summary>
        </member>
        <member name="E:GoodAI.ToyWorld.Control.ImageSettings.OnPostRenderingEvent">
            <summary>
            Called after the timeframe in which the buffer object (VBO) will be used as a target to copy rendered results to.
            The argument is an OpenGL handle to the underlying buffer object.
            Because an internal OpenGL context is now active, you can use this callback to do any copying
            from the buffer object or to map a CUDA pointer using CUDA-GL interop.
            This callback can be invoked from a different thread than the one calling MakeStep on GameController.
            Depth information is only valid if <see cref="P:GoodAI.ToyWorld.Control.ImageSettings.CopyDepth"/> is set to true.
            </summary>
        </member>
        <member name="M:GoodAI.ToyWorld.Control.ImageSettings.InvokePostRenderingEvent(GoodAI.ToyWorld.Control.IRenderRequestBase,System.UInt32,System.UInt32)">
            <summary>
            You should not use this method. Stay away!
            </summary>
        </member>
        <member name="T:GoodAI.ToyWorld.Control.IRenderRequestBase">
            <summary>
            
            </summary>
        </member>
        <member name="M:GoodAI.ToyWorld.Control.IRenderRequestBase.UnregisterRenderRequest">
            <summary>
            Use this method to remove the request from processing queue. Dispose works too.
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.IRenderRequestBase.PositionCenter">
            <summary>
            
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.IRenderRequestBase.Size">
            <summary>
            
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.IRenderRequestBase.View">
            <summary>
            Determined by PositionCenter and Size.
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.IRenderRequestBase.FlipYAxis">
            <summary>
            If true, renders the image upside down (flipped by the Y axis). The origin thus moves to the upper-left corner.
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.IRenderRequestBase.Resolution">
            <summary>
            
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.IRenderRequestBase.MultisampleLevel">
            <summary>
            The level of multisampling to use (each pixel uses 2^MultisampleLevel samples). Must be between 0 (no AA) and 4 (16x MSAA).
            Currently level 1 is equal to level 2 (both are 4x MSAA).
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.IRenderRequestBase.GameObjects">
            <summary>
            Contains the desired settings for rendering game objects.
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.IRenderRequestBase.Effects">
            <summary>
            Contains the desired settings of scene effects.
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.IRenderRequestBase.Postprocessing">
            <summary>
            Contains the desired settings for scene postprocessing.
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.IRenderRequestBase.Overlay">
            <summary>
            Contains the desired settings for scene overlays.
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.IRenderRequestBase.Image">
            <summary>
            Contains the desired settings of rendered image copying.
            </summary>
        </member>
        <member name="T:GoodAI.ToyWorld.Control.RenderRequestNotImplementedException">
            <summary>
            Thrown when requesting an unknown IRenderRequest or IAvatarRenderRequest from an IGameController.
            </summary>
        </member>
        <member name="M:GoodAI.ToyWorld.Control.RenderRequestNotImplementedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the RenderRequestNotImplementedException class with the specified message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="T:GoodAI.ToyWorld.Control.IAvatarController">
             <summary>
            
             </summary>
        </member>
        <member name="M:GoodAI.ToyWorld.Control.IAvatarController.SetActions(GoodAI.ToyWorld.Control.IAvatarControls)">
             <summary>
            
             </summary>
             <param name="actions">Action for avatar.</param>
        </member>
        <member name="M:GoodAI.ToyWorld.Control.IAvatarController.GetStats">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:GoodAI.ToyWorld.Control.IAvatarController.GetComment">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:GoodAI.ToyWorld.Control.IAvatarController.ResetControls">
            <summary>
            Sets initial values to controls. Agent should not move.
            </summary>
        </member>
        <member name="M:GoodAI.ToyWorld.Control.IAvatarController.GetActions">
            <summary>
            Returns currently set actions
            </summary>
        </member>
        <member name="T:GoodAI.ToyWorld.Control.GameSetup">
            <summary>
            Setup object for ToyWorld
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.GameSetup.SaveFile">
            <summary>
            The path to a .TMX (fresh world) or a world save.
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.GameSetup.TilesetFile">
            <summary>
            Csv table containing columns "NameOfTile", "PositionInTileset" and "IsDefault"
            One TileName can have more PositionInTileset numbers, so object can behave based on common
            implementation but looks different according to position.
            
            <p>(string) Name of tile must match name of implemented object.</p>
            <p>(int) Position in tileset is index of tile in png file with pictures of tiles and objects.
            It should match index in Tiled</p>
            <p>(0|1) . If is some tile default, when new tile is created, this TileNumber will be used.</p>
            </summary>
        </member>
        <member name="M:GoodAI.ToyWorld.Control.GameSetup.#ctor(System.IO.Stream,System.IO.StreamReader)">
            <summary>
            Setup object for ToyWorld constructor.
            </summary>
            <param name="saveFile">Tmx file created in Tiled editor or save file</param>
            <param name="tilesetFile">Csv table containing columns "NameOfTile", "PositionInTileset" and "IsDefault"</param>
        </member>
        <member name="T:GoodAI.ToyWorld.Control.IGameController">
             <summary>
            
             </summary>
        </member>
        <member name="M:GoodAI.ToyWorld.Control.IGameController.Init">
             <summary>
            
             </summary>
        </member>
        <member name="M:GoodAI.ToyWorld.Control.IGameController.MakeStep">
             <summary>
            
             </summary>
        </member>
        <member name="M:GoodAI.ToyWorld.Control.IGameController.RegisterRenderRequest``1(System.Int32)">
             <summary>
            
             </summary>
             <param name="avatarID"></param>
             <exception cref="T:GoodAI.ToyWorld.Control.RenderRequestNotImplementedException">Thrown when requesting an unknown <see cref="T:GoodAI.ToyWorld.Control.IAvatarRenderRequest"/> from the controller.
             This usually indicates an older version of the core than the API.</exception>
        </member>
        <member name="M:GoodAI.ToyWorld.Control.IGameController.RegisterRenderRequest``1">
             <summary>
            
             </summary>
             <exception cref="T:GoodAI.ToyWorld.Control.RenderRequestNotImplementedException">Thrown when requesting an unknown <see cref="T:GoodAI.ToyWorld.Control.IRenderRequest"/> from the controller.
             This usually indicates an older version of the core than the API.</exception>
        </member>
        <member name="M:GoodAI.ToyWorld.Control.IGameController.GetAvatarController(System.Int32)">
             <summary>
            
             </summary>
             <param name="avatarId"></param>
             <returns></returns>
        </member>
        <member name="M:GoodAI.ToyWorld.Control.IGameController.GetAvatarIds">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:GoodAI.ToyWorld.Control.IGameController.GetSignals">
            <summary>
            Returns results from signal dispatchers of IWorld
            </summary>
            <returns></returns>
        </member>
        <member name="T:GoodAI.ToyWorld.Control.IStats">
            <summary>
            
            </summary>
        </member>
        <member name="T:GoodAI.ToyWorld.Control.IAvatarRenderRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.IAvatarRenderRequest.AvatarID">
            <summary>
            
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.IAvatarRenderRequest.RelativePosition">
            <summary>
            Relative position of PositionCenter to avatar's position
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.IAvatarRenderRequest.RotateMap">
            <summary>
            If true, rotates the map around the agent (which stays fixed looking upwards).
            </summary>
        </member>
        <member name="T:GoodAI.ToyWorld.Control.IFovAvatarRR">
            <summary>
            
            </summary>
        </member>
        <member name="T:GoodAI.ToyWorld.Control.IFofAvatarRR">
            <summary>
            
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.IFofAvatarRR.FovAvatarRenderRequest">
            <summary>
            
            </summary>
        </member>
        <member name="T:GoodAI.ToyWorld.Control.IToolAvatarRR">
            <summary>
            
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.IToolAvatarRR.RelativePosition">
            <summary>
            This property is not used and its value is undefined.
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.IToolAvatarRR.RotateMap">
            <summary>
            This property is not used and its value is undefined.
            </summary>
        </member>
        <member name="T:GoodAI.ToyWorld.Control.IRenderRequest">
            <summary>
            
            </summary>
        </member>
        <member name="T:GoodAI.ToyWorld.Control.IFullMapRR">
            <summary>
            
            </summary>
        </member>
        <member name="T:GoodAI.ToyWorld.Control.IFreeMapRR">
            <summary>
            
            </summary>
        </member>
        <member name="P:GoodAI.ToyWorld.Control.IFreeMapRR.PositionCenter">
            <summary>
            
            </summary>
        </member>
        <member name="M:GoodAI.ToyWorld.Control.IFreeMapRR.SetPositionCenter(System.Single,System.Single,System.Single)">
            <summary>
            Equivalent to setting the PositionCenter property (except for the z value).
            </summary>
        </member>
        <member name="E:GoodAI.ToyWorldAPI.IMessageSender.NewMessage">
            <summary>
            Message obtained from avatar
            </summary>
        </member>
    </members>
</doc>
